<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>halyard-webapps</artifactId>
	<packaging>jar</packaging>
	<parent>
		<groupId>io.github.pulquero.halyard</groupId>
		<artifactId>halyard</artifactId>
		<version>3.13-SNAPSHOT</version>
	</parent>
	<properties>
		<jminix.version>1.3.2</jminix.version>
		<restlet.version>2.4.3</restlet.version>
	</properties>
	<repositories>
		<repository>
			<id>maven-restlet</id>
			<name>Restlet repository</name>
			<url>https://maven.restlet.talend.com</url>
		</repository>
	</repositories>
	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>halyard-sdk</artifactId>
			<version>${project.version}</version>
			<type>pom</type>
			<exclusions>
				<exclusion>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-classic</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3.3</version>
		</dependency>
		<dependency>
			<groupId>org.jminix</groupId>
			<artifactId>jminix</artifactId>
			<version>${jminix.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.4</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.10</version>
				<executions>
					<execution>
						<id>copy-wars-for-patching</id>
						<phase>process-classes</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.eclipse.rdf4j</groupId>
									<artifactId>rdf4j-http-server</artifactId>
									<version>${rdf4j.version}</version>
									<type>war</type>
									<destFileName>rdf4j-server.war</destFileName>
								</artifactItem>
								<artifactItem>
									<groupId>org.eclipse.rdf4j</groupId>
									<artifactId>rdf4j-http-workbench</artifactId>
									<version>${rdf4j.version}</version>
									<type>war</type>
									<destFileName>rdf4j-workbench.war</destFileName>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<overWriteReleases>true</overWriteReleases>
						</configuration>
					</execution>
					<execution>
						<id>copy-extra-dependencies</id>
						<phase>process-classes</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>net.sf.saxon</groupId>
									<artifactId>Saxon-HE</artifactId>
									<version>${saxon.version}</version>
								</artifactItem>
								<artifactItem>
									<groupId>org.lz4</groupId>
									<artifactId>lz4-java</artifactId>
									<version>${lz4.version}</version>
								</artifactItem>
								<artifactItem>
									<groupId>com.ibm.icu</groupId>
									<artifactId>icu4j</artifactId>
									<version>${icu4j.version}</version>
								</artifactItem>

								<artifactItem>
									<groupId>co.elastic.clients</groupId>
									<artifactId>elasticsearch-java</artifactId>
									<version>${elasticsearch.version}</version>
								</artifactItem>
								<artifactItem>
									<groupId>org.elasticsearch.client</groupId>
									<artifactId>elasticsearch-rest-client</artifactId>
									<version>${elasticsearch.version}</version>
								</artifactItem>
								<artifactItem>
									<groupId>org.apache.httpcomponents</groupId>
									<artifactId>httpasyncclient</artifactId>
									<version>4.1.4</version>
								</artifactItem>
								<artifactItem>
									<groupId>org.apache.httpcomponents</groupId>
									<artifactId>httpcore-nio</artifactId>
									<version>4.4.13</version>
								</artifactItem>
								<artifactItem>
									<groupId>org.eclipse.parsson</groupId>
									<artifactId>parsson</artifactId>
									<version>1.0.0</version>
								</artifactItem>
								<artifactItem>
									<groupId>jakarta.json</groupId>
									<artifactId>jakarta.json-api</artifactId>
									<version>2.0.1</version>
								</artifactItem>

								<artifactItem>
									<groupId>org.jminix</groupId>
									<artifactId>jminix</artifactId>
									<version>${jminix.version}</version>
								</artifactItem>
								<artifactItem>
									<groupId>org.restlet.jee</groupId>
									<artifactId>org.restlet</artifactId>
									<version>${restlet.version}</version>
								</artifactItem>
								<artifactItem>
									<groupId>org.restlet.jee</groupId>
									<artifactId>org.restlet.ext.velocity</artifactId>
									<version>${restlet.version}</version>
								</artifactItem>
								<artifactItem>
									<groupId>org.apache.velocity</groupId>
									<artifactId>velocity-engine-core</artifactId>
									<version>2.0</version>
								</artifactItem>
								<artifactItem>
									<groupId>org.restlet.jee</groupId>
									<artifactId>org.restlet.ext.servlet</artifactId>
									<version>${restlet.version}</version>
								</artifactItem>
								<artifactItem>
									<groupId>net.sf.json-lib</groupId>
									<artifactId>json-lib</artifactId>
									<version>2.4</version>
									<classifier>jdk15</classifier>
								</artifactItem>
								<artifactItem>
									<groupId>commons-lang</groupId>
									<artifactId>commons-lang</artifactId>
									<version>2.5</version>
								</artifactItem>
								<artifactItem>
									<groupId>net.sf.ezmorph</groupId>
									<artifactId>ezmorph</artifactId>
									<version>1.0.6</version>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${project.build.directory}/extra-libs</outputDirectory>
							<overWriteReleases>true</overWriteReleases>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>patch-sesame-wars</id>
						<phase>package</phase>
						<configuration>
							<target>
								<unzip src="${project.build.directory}/rdf4j-server.war" dest="${project.build.directory}/rdf4j-server-patch" overwrite="true">
									<patternset>
										<include name="WEB-INF/rdf4j-http-server-servlet.xml" />
										<include name="WEB-INF/lib/rdf4j-http-server-spring-${rdf4j.version}.jar" />
									</patternset>
								</unzip>
								<replace file="${project.build.directory}/rdf4j-server-patch/WEB-INF/rdf4j-http-server-servlet.xml" token="org.eclipse.rdf4j.repository.manager.LocalRepositoryManager" value="com.msd.gin.halyard.repository.HBaseRepositoryManager" />
								<zip destfile="${project.build.directory}/rdf4j-server-patch/WEB-INF/lib/rdf4j-http-server-spring-${rdf4j.version}.jar" update="true">
									<fileset dir="${project.build.directory}/classes" includes="org/eclipse/rdf4j/common/webapp/**" />
								</zip>
								<zip destfile="${project.build.directory}/rdf4j-server.war" update="true">
									<fileset dir="src/main/patches/rdf4j-server" />
									<fileset dir="${project.build.directory}/rdf4j-server-patch" />
									<zipfileset dir="${project.build.directory}" includes="halyard-webapps-${project.version}.jar" prefix="WEB-INF/lib" />
									<zipfileset dir="../common/target" includes="halyard-common-${project.version}.jar" prefix="WEB-INF/lib" />
									<zipfileset dir="../strategy/target" includes="halyard-strategy-${project.version}.jar" prefix="WEB-INF/lib" />
									<zipfileset dir="../sail/target" includes="halyard-sail-${project.version}.jar" prefix="WEB-INF/lib" />
									<zipfileset dir="../rio/target" includes="halyard-rio-${project.version}.jar" prefix="WEB-INF/lib" />
									<zipfileset dir="../sdk/target" includes="rdf4j-repository-api-${rdf4j.version}.jar" prefix="WEB-INF/lib" />
									<zipfileset dir="${project.build.directory}/extra-libs" includes="*.jar" prefix="WEB-INF/lib" />
								</zip>
								<unzip src="${project.build.directory}/rdf4j-workbench.war" dest="${project.build.directory}/rdf4j-workbench-patch" overwrite="true">
									<patternset>
										<include name="transformations/create.xsl" />
										<include name="locale/messages.xsl" />
										<include name="WEB-INF/web.xml" />
										<include name="WEB-INF/lib/rdf4j-http-workbench-${rdf4j.version}.jar" />
									</patternset>
								</unzip>
								<replace file="${project.build.directory}/rdf4j-workbench-patch/transformations/create.xsl" token="&lt;select id=&quot;type&quot; name=&quot;type&quot;&gt;" value="&lt;select id=&quot;type&quot; name=&quot;type&quot;&gt;&lt;option value=&quot;hbase&quot;&gt;Halyard HBase Store&lt;/option&gt;" />
								<replace file="${project.build.directory}/rdf4j-workbench-patch/locale/messages.xsl" token="&lt;variable name=&quot;limit200.label&quot;&gt;200&lt;/variable&gt;" value="&lt;variable name=&quot;limit200.label&quot;&gt;200&lt;/variable&gt; &lt;variable name=&quot;limit500.label&quot;&gt;500&lt;/variable&gt; &lt;variable name=&quot;limit1000.label&quot;&gt;1000&lt;/variable&gt;" />
								<replace file="${project.build.directory}/rdf4j-workbench-patch/WEB-INF/web.xml" token="100" value="200" />
								<zip destfile="${project.build.directory}/rdf4j-workbench-patch/WEB-INF/lib/rdf4j-http-workbench-${rdf4j.version}.jar" update="true">
									<fileset dir="${project.build.directory}/classes" includes="org/eclipse/rdf4j/workbench/**" />
								</zip>
								<zip destfile="${project.build.directory}/rdf4j-workbench.war" update="true">
									<fileset dir="src/main/patches/rdf4j-workbench" />
									<fileset dir="${project.build.directory}/rdf4j-workbench-patch" />
									<zipfileset dir="../common/target" includes="halyard-common-${project.version}.jar" prefix="WEB-INF/lib" />
									<zipfileset dir="../strategy/target" includes="halyard-strategy-${project.version}.jar" prefix="WEB-INF/lib" />
									<zipfileset dir="../sail/target" includes="halyard-sail-${project.version}.jar" prefix="WEB-INF/lib" />
									<zipfileset dir="../rio/target" includes="halyard-rio-${project.version}.jar" prefix="WEB-INF/lib" />
									<zipfileset dir="../sdk/target" includes="rdf4j-repository-api-${rdf4j.version}.jar" prefix="WEB-INF/lib" />
									<zipfileset dir="${project.build.directory}/extra-libs" includes="*.jar" prefix="WEB-INF/lib" />
								</zip>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.5.3</version>
				<executions>
					<execution>
						<id>standalone-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptor>src/main/assembly/webapps-assembly.xml</descriptor>
							<appendAssemblyId>false</appendAssemblyId>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<configuration>
						<failOnError>false</failOnError>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>